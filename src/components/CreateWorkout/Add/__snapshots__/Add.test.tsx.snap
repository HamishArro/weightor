// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add tests matches snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#dbdbdb",
      "width": "100%",
    }
  }
  testID="add-container"
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#003844",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "padding": 8,
      }
    }
    testID="title-container"
  >
    <Text
      style={
        {
          "color": "#FFFFFF",
          "fontSize": 20,
        }
      }
    >
      Add exercise
    </Text>
    <Text
      allowFontScaling={false}
      onPress={
        [MockFunction] {
          "calls": [
            [],
          ],
          "results": [
            {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      selectable={false}
      style={
        [
          {
            "color": "white",
            "fontSize": 20,
          },
          undefined,
          {
            "fontFamily": "anticon",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {},
        ]
      }
      testID="back-button"
    >
      î˜’
    </Text>
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="cardio-button"
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
            {
              "color": "#003844",
            },
          ]
        }
      >
        cardio
      </Text>
    </View>
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="weight-button"
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
            {
              "color": "#003844",
            },
          ]
        }
      >
        weight
      </Text>
    </View>
  </View>
</View>
`;
